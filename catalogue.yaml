- name: configuring catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: disable nodejs module
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enable nodejs module
    ansible.builtin.command: dnf module enable nodejs:20 -y
 
  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present
  
  - name: create system user roboshop
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: create app directory 
    ansible.builtin.file:
      name: /app
      state: directory  
  - name: download the catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue-v3.zip
  
  - name: unzip the application
    ansible.builtin.unarchive:
      src: /tmp/catalogue-v3.zip
      dest: /app
      remote_src: yes

  - name: install nodejs dependecies
    community.general.npm:
      path: /app
  - name: copy catalogue service to system directory
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  
  - name: dameon reload cata service
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: enable and start catalogue service
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes
  - name: mongodb setup
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongoDB client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: installed

  - name: check products loaded or not
    ansible.builtin.command: mongosh --host mongodb.devops73.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_ouput

  - name: print catalogue ouput
    ansible.builtin.debug:
      msg: "{{ catalogue_ouput }}"


  
    







    

